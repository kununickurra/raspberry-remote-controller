# Template for the Power Switch Physical configuration and the mapping with the Logical configuration
# It is based on the GPIO configuration of the Raspberry PI
# The pins declared in this list MUST have a corresponding Logical configuration,
# system startup will fail in case of wrong/missing mapping between physical and logical configuration
# Note that the content of this file will depend on the Physical wiring
# between the GPIO pins and the hardware device to handle

# Property "pins"
#   Description : Holds a comma separated list of the pins that will be used to drive the power switches.
#   Rules   The id MUST be numeric
#           All Id defined here must match the Id defines in the Logical configuration
#
# Example with 4 pins :
#
pins=1,2,3,4

#  Property "pin.{id}.gpio"
#  Description: Mapping with the Physical GPIO Pin identifier
#  Rules:   Physical GPIO Pin name must match "com.pi4j.io.gpio.RaspiPin.GPIO_{XX}"
#           {id} should be replaced with the id of the pin to be configured.
#  Mandatory: All pins declared in the list above MUST be defined here.
#
# Example with 4 pins :
#
pin.1.gpio=GPIO_00
pin.2.gpio=GPIO_02
pin.3.gpio=GPIO_03
pin.4.gpio=GPIO_04

#  Property "pin.{id}.state.switch.on"
#  Description: Mapping between the logical switch state ON and the corresponding GPIO pin state (LOW/HIGH)
#               Depending on the hardware connected to the GPIO, pins might need to be driven differently.
#  Rules:   Valid GPIO Pin state (HIGH/LOW)
#           {id} should be replaced with the id of the pin to be configured.
#  Optional: Default: The default switch state is mapped ON -> HIGH.
#
# Example of mixed configuration :
#

# override default value
# All other pin will be mapped with default mapping
pin.2.state.switch.on=LOW
